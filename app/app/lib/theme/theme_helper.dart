import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.purple90001.withOpacity(0.5),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(18.h),
          ),
          shadowColor: colorScheme.primary,
          elevation: 4,
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.purple90001.withOpacity(0.5),
            width: 4.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.only(
              topLeft: Radius.circular(40.h),
              topRight: Radius.circular(40.h),
              bottomLeft: Radius.circular(0.h),
              bottomRight: Radius.circular(0.h),
            ),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: colorScheme.primary.withOpacity(1),
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 16.fSize,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 15.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w400,
        ),
        displayLarge: TextStyle(
          color: colorScheme.primary.withOpacity(0.64),
          fontSize: 64.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: appTheme.blueGray800,
          fontSize: 36.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        headlineLarge: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 30.fSize,
          fontFamily: 'Outfit',
          fontWeight: FontWeight.w600,
        ),
        headlineMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 28.fSize,
          fontFamily: 'Rubik',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 25.fSize,
          fontFamily: 'Rubik',
          fontWeight: FontWeight.w700,
        ),
        labelMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 10.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 20.fSize,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 16.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.blueGray90001,
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w800,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0X3F000000),
    primaryContainer: Color(0X7F20102D),
    secondaryContainer: Color(0X33595EB4),

    // Error colors
    errorContainer: Color(0XFF060606),
    onError: Color(0XFFF1F1F1),
    onErrorContainer: Color(0XFF484848),

    // On colors(text colors)
    onPrimary: Color(0XFF242E29),
    onPrimaryContainer: Color(0XFF9C83B0),
    onSecondaryContainer: Color(0XFF360033),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Blue
  Color get blue400 => Color(0XFF47A7ED);
  Color get blue500 => Color(0XFF2196F3);
  Color get blue700 => Color(0XFF1976D2);
  Color get blue800 => Color(0XFF857EFF); //new

  // BlueGray
  Color get blueGray100 => Color(0XFFD8D8DD);
  Color get blueGray10001 => Color(0XFFCBCBCB);
  Color get blueGray700 => Color(0XFF4E4C67);
  Color get blueGray800 => Color(0XFF3F3D56);
  Color get blueGray900 => Color(0XFF2F2E41);
  Color get blueGray90001 => Color(0XFF343343);
  Color get blueGray90002 => Color(0XFF252247);
  Color get blueGray90003 => Color.fromARGB(255, 100, 110, 136);

  // DeepOrange
  Color get deepOrange100 => Color(0XFFFFB7B7);

  // DeepPurple
  Color get deepPurple200 => Color(0XFFADA4E7);
  Color get deepPurple20001 => Color(0XFFB18CCE);
  Color get deepPurpleA100 => Color(0XFFBC83E8);
  Color get deepPurpleA10001 => Color(0XFFBC83E9);
  Color get deepPurpleA100001 => Color(0XFF9D75FF); //new
  Color get PurplePassion => Color(0XFF9B77FF); //new
  Color get MidnightLavender => Color(0XFF8F7BFF); //new
  // Gray
  Color get gray100 => Color(0XFFF5F5F5);
  Color get gray10001 => Color(0XFFF2F2F2);
  Color get gray300 => Color(0XFFE0E0E0);
  Color get gray50 => Color(0XFFFAFAFA);
  Color get gray500 => Color(0XFFA8A8A8);
  Color get gray50001 => Color(0XFFA09E99);
  Color get gray80026 => Color(0X264B4B4B);
  Color get DarkInk => Color(0XFF2B2727); //new

  // Grayf
  Color get gray5007f => Color(0X7F9B83AF);
  Color get gray9007f => Color(0X7F20102C);

  // GrayAd
  Color get gray600Ad => Color(0XAD808080);

  // Green
  Color get green500 => Color(0XFF4CAF50);
  Color get green700 => Color(0XFF388E3C);

  // Indigo
  Color get indigo40019 => Color(0X19666CC7);
  Color get indigo4001901 => Color(0X197067C8);
  Color get indigo40033 => Color(0X33676CC8);
  Color get indigo4003301 => Color(0X33595EB4);
  Color get indigo70019 => Color(0X193C4090);
  Color get indigoA10019 => Color(0X197B81FF);
  Color get indigoA200 => Color(0XFF6C63FF);

  // Pink
  Color get pink300 => Color(0XFFFF6584);

  // Purple
  Color get purple200 => Color(0XFFD097E4);
  Color get purple20001 => Color(0XFFCF96E3);
  Color get purple400 => Color(0XFF9F4CBC);
  Color get purple80000 => Color(0X00763372);
  Color get purple900 => Color(0XFF582E7A);
  Color get purple90001 => Color(0XFF592F7A);
  Color get purple90033 => Color(0X33541C78);
  Color get purple9003301 => Color(0X33530E6B);

//welcome screen
// new
  Color get no1 => Color(0XFF530E6C);
  Color get no2 => Color(0XFF541D78);
  Color get no3 => Color(0XFF5A5FB5);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  Color get AddColorIcon => Color(0XFFAC96BB);
  Color get accessTheme1 => Color(0XFFBDA0D7);
  Color get accessTheme2 => Color(0XFFC9BBD5);
  Color get accessTheme3 => Color(0XFFA088B3);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
